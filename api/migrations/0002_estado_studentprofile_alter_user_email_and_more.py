# Generated by Django 4.2.15 on 2025-09-10 20:26

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('id_ibge', models.CharField(unique=True)),
                ('nome', models.CharField(max_length=255)),
                ('uf', models.CharField(max_length=5)),
                ('regiao', models.CharField(max_length=50)),
                ('pais', models.CharField(max_length=50)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='student_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('student_type', models.CharField(choices=[('INTERNO', 'Aluno Interno (IFCE)'), ('EXTERNO', 'Aluno Externo')], max_length=10, verbose_name='Tipo de Aluno')),
            ],
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='endereço de e-mail'),
        ),
        migrations.CreateModel(
            name='InternalStudentData',
            fields=[
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='internal_data', serialize=False, to='api.studentprofile')),
                ('ifce_enrollment_id', models.CharField(max_length=100, unique=True, verbose_name='Matrícula IFCE')),
            ],
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=255)),
                ('codigo_ibge', models.CharField(default=0)),
                ('capital', models.BooleanField(default=False)),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.estado')),
            ],
            options={
                'verbose_name': 'Município',
                'verbose_name_plural': 'Municípios',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='ExternalStudent',
            fields=[
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='external_data', serialize=False, to='api.studentprofile')),
                ('nome_completo', models.CharField(max_length=255)),
                ('data_nascimento', models.DateField()),
                ('sexo', models.CharField(choices=[('F', 'Feminino'), ('M', 'Masculino'), ('O', 'Outro'), ('N', 'Prefiro não informar')], max_length=1, verbose_name='Sexo')),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='CPF deve seguir o formato 999.999.999-99.', regex='^\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}$')])),
                ('numero_identidade', models.CharField(blank=True, max_length=20, verbose_name='Número do RG')),
                ('orgao_expedidor', models.CharField(choices=[('SSP', 'SSP'), ('SSPDS', 'SSPDS'), ('PC', 'PC'), ('DETRAN', 'DETRAN'), ('IGP', 'IGP'), ('OUTRO', 'Outro')], max_length=10, verbose_name='Órgão Expedidor')),
                ('cep', models.CharField(blank=True, max_length=9, validators=[django.core.validators.RegexValidator(message='CEP deve seguir o formato 99999-999.', regex='^\\d{5}-\\d{3}$')], verbose_name='CEP')),
                ('logradouro', models.CharField(blank=True, max_length=255, verbose_name='Logradouro')),
                ('numero_endereco', models.CharField(blank=True, max_length=20, verbose_name='Número')),
                ('bairro', models.CharField(blank=True, max_length=100, verbose_name='Bairro')),
                ('telefone_celular', models.CharField(blank=True, max_length=15, verbose_name='Celular')),
                ('cidade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moradores', to='api.municipio', verbose_name='Cidade')),
                ('naturalidade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nascidos_aqui', to='api.municipio', verbose_name='Cidade de Nascimento')),
                ('uf_expedidor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.estado', verbose_name='UF de Expedição')),
            ],
            options={
                'verbose_name': 'Dados de Aluno Externo',
                'verbose_name_plural': 'Dados de Alunos Externos',
                'unique_together': {('numero_identidade', 'orgao_expedidor', 'uf_expedidor')},
            },
        ),
    ]

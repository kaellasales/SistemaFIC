# Generated by Django 5.2.6 on 2025-09-20 20:31

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0004_remove_internalstudentdata_profile_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='aluno',
            name='cep',
            field=models.CharField(blank=True, max_length=9, validators=[django.core.validators.RegexValidator(message='CEP deve seguir o formato 99999-999.', regex='^\\d{5}\\-?\\d{3}$')], verbose_name='CEP'),
        ),
        migrations.AlterField(
            model_name='aluno',
            name='numero_identidade',
            field=models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='O Registro Geral possui 11 digitos.', regex='^\\d{10}\\-?\\d{1}$')], verbose_name='Número do RG'),
        ),
        migrations.AlterField(
            model_name='professor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='professor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Convite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDENTE', 'Pendente'), ('ACEITO', 'Aceito'), ('RECUSADO', 'Recusado')], default='PENDENTE', max_length=10)),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('data_envio', models.DateTimeField(auto_now_add=True)),
                ('data_resposta', models.DateTimeField(blank=True, null=True)),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.professor')),
            ],
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=255)),
                ('carga_horaria', models.IntegerField()),
                ('descricao', models.TextField()),
                ('vagas_internas', models.PositiveIntegerField(default=0, help_text='Número de vagas para alunos internos.')),
                ('vagas_externas', models.PositiveIntegerField(default=0, help_text='Número de vagas para alunos externos.')),
                ('criador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.professor')),
                ('professores', models.ManyToManyField(related_name='cursos_lecionados', through='api.Convite', to='api.professor')),
            ],
        ),
        migrations.AddField(
            model_name='convite',
            name='curso',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.curso'),
        ),
        migrations.AlterUniqueTogether(
            name='convite',
            unique_together={('curso', 'professor')},
        ),
        migrations.CreateModel(
            name='InscricaoAluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('AGUARDANDO_VALIDACAO', 'Aguardando Validação'), ('CONFIRMADA', 'Confirmada'), ('LISTA_ESPERA', 'Lista de Espera'), ('CANCELADA', 'Cancelada')], default='AGUARDANDO_VALIDACAO', max_length=30)),
                ('data_inscricao', models.DateTimeField(auto_now_add=True)),
                ('tipo_vaga', models.CharField(choices=[('INTERNO', 'Interno'), ('EXTERNO', 'Externo')], max_length=10)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.aluno')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.curso')),
            ],
            options={
                'unique_together': {('aluno', 'curso')},
            },
        ),
    ]

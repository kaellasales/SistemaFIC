# Generated by Django 5.2.6 on 2025-09-14 03:17

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0003_alter_externalstudent_data_nascimento'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='internalstudentdata',
            name='profile',
        ),
        migrations.RemoveField(
            model_name='studentprofile',
            name='user',
        ),
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('sexo', models.CharField(choices=[('F', 'Feminino'), ('M', 'Masculino'), ('O', 'Outro'), ('N', 'Prefiro não informar')], max_length=1, verbose_name='Sexo')),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='CPF deve seguir o formato 999.999.999-99.', regex='^\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}$')])),
                ('numero_identidade', models.CharField(blank=True, max_length=20, verbose_name='Número do RG')),
                ('orgao_expedidor', models.CharField(choices=[('SSP', 'SSP'), ('SSPDS', 'SSPDS'), ('PC', 'PC'), ('DETRAN', 'DETRAN'), ('IGP', 'IGP'), ('OUTRO', 'Outro')], max_length=10, verbose_name='Órgão Expedidor')),
                ('cep', models.CharField(blank=True, max_length=9, validators=[django.core.validators.RegexValidator(message='CEP deve seguir o formato 99999-999.', regex='^\\d{5}-\\d{3}$')], verbose_name='CEP')),
                ('logradouro', models.CharField(blank=True, max_length=255, verbose_name='Logradouro')),
                ('numero_endereco', models.CharField(blank=True, max_length=20, verbose_name='Número')),
                ('bairro', models.CharField(blank=True, max_length=100, verbose_name='Bairro')),
                ('telefone_celular', models.CharField(blank=True, max_length=15, verbose_name='Celular')),
                ('cidade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moradores', to='api.municipio', verbose_name='Cidade')),
                ('naturalidade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nascidos_aqui', to='api.municipio', verbose_name='Cidade de Nascimento')),
                ('uf_expedidor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.estado', verbose_name='UF de Expedição')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_aluno', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dados de Aluno',
                'verbose_name_plural': 'Dados de Alunos',
                'unique_together': {('numero_identidade', 'orgao_expedidor', 'uf_expedidor')},
            },
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('siape', models.CharField(max_length=20, unique=True)),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message='CPF deve seguir o formato 999.999.999-99.', regex='^\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}$')])),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_professor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Professor',
                'verbose_name_plural': 'Professores',
            },
        ),
        migrations.DeleteModel(
            name='ExternalStudent',
        ),
        migrations.DeleteModel(
            name='InternalStudentData',
        ),
        migrations.DeleteModel(
            name='StudentProfile',
        ),
    ]
